---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: cloudflare-only
spec:
  securityPolicy:
    name: cloudflare-only

---
apiVersion: v1
kind: Service
metadata:
  name: cube-mainnet-nodeport
  annotations:
    cloud.google.com/backend-config: '{"ports":{"4000":"cloudflare-only"}}'
spec:
  type: NodePort
  selector:
    app.kubernetes.io/component: api
    app.kubernetes.io/instance: cube-mainnet
    app.kubernetes.io/name: cube
  ports:
  - name: http
    port: 4000
    protocol: TCP
    targetPort: http

---
apiVersion: v1
kind: Service
metadata:
  name: cube-ollinet-nodeport
  annotations:
    cloud.google.com/backend-config: '{"ports":{"4000":"cloudflare-only"}}'
spec:
  type: NodePort
  selector:
    app.kubernetes.io/component: api
    app.kubernetes.io/instance: cube-ollinet
    app.kubernetes.io/name: cube
  ports:
  - name: http
    port: 4000
    protocol: TCP
    targetPort: http

---
apiVersion: v1
kind: Service
metadata:
  name: cube-emerynet-nodeport
  annotations:
    cloud.google.com/backend-config: '{"ports":{"4000":"cloudflare-only"}}'
spec:
  type: NodePort
  selector:
    app.kubernetes.io/component: api
    app.kubernetes.io/instance: cube-emerynet
    app.kubernetes.io/name: cube
  ports:
  - name: http
    port: 4000
    protocol: TCP
    targetPort: http

---
apiVersion: v1
kind: Service
metadata:
  name: cube-devnet-nodeport
  annotations:
    cloud.google.com/backend-config: '{"ports":{"4000":"cloudflare-only"}}'
spec:
  type: NodePort
  selector:
    app.kubernetes.io/component: api
    app.kubernetes.io/instance: cube-devnet
    app.kubernetes.io/name: cube
  ports:
  - name: http
    port: 4000
    protocol: TCP
    targetPort: http

---
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: agoric-tool-cert
spec:
  domains:
    - agoric.tool.p2p.org

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: cube-gke
  annotations:
    kubernetes.io/ingress.global-static-ip-name: agoric-dashboard
    networking.gke.io/managed-certificates: agoric-tool-cert
spec:
  defaultBackend:
    service:
      name: info-dashboard
      port:
        name: http
  rules:
    - http:
        paths:
          - path: /data/*
            pathType: ImplementationSpecific
            backend:
              service:
                name: oldagoric
                port:
                  name: http

          - path: /cubejs-api/agoric_mainnet/*
            pathType: ImplementationSpecific
            backend:
              service:
                name: cube-mainnet-nodeport
                port:
                  name: http

          - path: /cubejs-api/agoric_emerynet/*
            pathType: ImplementationSpecific
            backend:
              service:
                name: cube-emerynet-nodeport
                port:
                  name: http

          - path: /cubejs-api/agoric_ollinet/*
            pathType: ImplementationSpecific
            backend:
              service:
                name: cube-ollinet-nodeport
                port:
                  name: http

          - path: /cubejs-api/agoric_devnet/*
            pathType: ImplementationSpecific
            backend:
              service:
                name: cube-devnet-nodeport
                port:
                  name: http
