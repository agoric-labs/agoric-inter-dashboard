version: '2.2'

services:
  dashboard:
    build:
      context: ./dashboard
      args:
        - VITE_BASE_URL=http://localhost:4000
    ports:
      - 5173:80

  txdecode:
    build:
      context: .
    environment:
      PORT: "8081"
    command:
      - "http-processor"
      - "agd"
      - "txdecode"

  indexer:
    restart: always
    stop_grace_period: 600s
    depends_on:
      - "txdecode"
    build:
      context: .
    ports:
      - 3333:3333
    environment:
      PROJECT_ID: "${PROJECT_ID}"
      DATASET_ID: "${DATASET_ID}"
      COORDINATOR_TENDERMINT_URL: "${TENDERMINT_RPC_URL}"
      COORDINATOR_BASE_CONFIG: '{"rpc_url":"${TENDERMINT_RPC_URL}","batch_size":32,"thread_count":24}'
      COORDINATOR_ADDR: ":3333"
      GOOGLE_APPLICATION_CREDENTIALS: "/bigquerycreds.json"
      DECODE_SERVICE_URL: "http://txdecode:8081"
      COORDINATOR_BATCH_SIZE: 10
      COORDINATOR_OUTPUT_LIMIT: 2
    volumes:
      - "${GOOGLE_CREDS}:/bigquerycreds.json"
      - "/tmp:/tmp"
    entrypoint:
      - "./extract-missing-blocks.sh"

  balances-extractor:
    restart: "no"
    build:
      context: .
    environment:
      RPC_URL: "${TENDERMINT_RPC_URL}"
      GRPC_ADDR: "${GRPC_ADDR}"
      PROJECT_ID: "${PROJECT_ID}"
      DATASET_ID: "${DATASET_ID}"
      ADDRESSES: "${BALANCE_ADDRESSES}"
      GOOGLE_APPLICATION_CREDENTIALS: "/bigquerycreds.json"
    volumes:
      - "${GOOGLE_CREDS}:/bigquerycreds.json"
    entrypoint:
      - "./extract-balances.sh"

  cubejs:
    image: cubejs/cube:v0.33.38
    ports:
      - 4000:4000
      - 3000:3000
      - 5432:5432
    environment:
      - DATASET_ID=${DATASET_ID}
      - CUBEJS_DEV_MODE=true
      - CUBEJS_DB_TYPE=bigquery
      - CUBEJS_WEB_SOCKETS=true
      - CUBEJS_DEFAULT_API_SCOPES=meta,data,graphql,jobs
      - CUBEJS_ROLLUP_ONLY=true
      - CUBEJS_DB_BQ_CREDENTIALS=${GOOGLE_CREDS_B64}
      - CUBEJS_DB_BQ_PROJECT_ID=${PROJECT_ID}
      - CUBEJS_DB_BQ_KEY_FILE=/bigquerycreds.json
      - CUBEJS_DB_EXPORT_BUCKET=${EXPORT_BUCKET}
      - CUBEJS_CUBESTORE_HOST=cubestore_router
      - CUBEJS_PG_SQL_PORT=5432
      - CUBEJS_SQL_USER=myusername
      - CUBEJS_SQL_PASSWORD=mypassword
      - CUBEJS_API_SECRET=agoric
    depends_on:
      - cube_refresh_worker
      - cubestore_router
      - cubestore_worker_1
      - cubestore_worker_2
    volumes:
      - ./cube:/cube/conf

  cube_refresh_worker:
    restart: always
    image: cubejs/cube:v0.33.38
    environment:
      - DATASET_ID=${DATASET_ID}
      - CUBEJS_DB_TYPE=bigquery
      - CUBEJS_DEV_MODE=true
      - CUBEJS_DB_BQ_PROJECT_ID=${PROJECT_ID}
      - CUBEJS_DB_BQ_CREDENTIALS=${GOOGLE_CREDS_B64}
      - CUBEJS_DB_EXPORT_BUCKET=${EXPORT_BUCKET}
      - CUBEJS_CUBESTORE_HOST=cubestore_router
      - CUBEJS_API_SECRET=agoric
      - CUBEJS_REFRESH_WORKER=true
    volumes:
      - ./cube:/cube/conf

  cubestore_router:
    restart: always
    image: cubejs/cubestore:v0.33.38
    environment:
      - CUBESTORE_WORKERS=cubestore_worker_1:10001,cubestore_worker_2:10002
      - CUBESTORE_REMOTE_DIR=/cube/data
      - CUBESTORE_META_PORT=9999
      - CUBESTORE_SERVER_NAME=cubestore_router:9999
    volumes:
      - .cubestore2:/cube/data

  cubestore_worker_1:
    restart: always
    image: cubejs/cubestore:v0.33.38
    environment:
      - CUBESTORE_WORKERS=cubestore_worker_1:10001,cubestore_worker_2:10002
      - CUBESTORE_SERVER_NAME=cubestore_worker_1:10001
      - CUBESTORE_WORKER_PORT=10001
      - CUBESTORE_REMOTE_DIR=/cube/data
      - CUBESTORE_META_ADDR=cubestore_router:9999
    volumes:
      - .cubestore:/cube/data
    depends_on:
      - cubestore_router

  cubestore_worker_2:
    restart: always
    image: cubejs/cubestore:v0.33.38
    environment:
      - CUBESTORE_WORKERS=cubestore_worker_1:10001,cubestore_worker_2:10002
      - CUBESTORE_SERVER_NAME=cubestore_worker_2:10002
      - CUBESTORE_WORKER_PORT=10002
      - CUBESTORE_REMOTE_DIR=/cube/data
      - CUBESTORE_META_ADDR=cubestore_router:9999
    volumes:
      - .cubestore:/cube/data
    depends_on:
      - cubestore_router
